{"version":3,"sources":["serviceWorkerRegistration.js","ui/AppMenu.js","settings/firebaseConfig.js","account/SignUp.js","account/SignIn.js","account/SignOut.js","index.js","vendor/VendorList.js","product/Product.js","ui/Main.js"],"names":["isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","AppMenu","AppBar","position","Toolbar","Button","component","NavLink","to","activeStyle","backgroundColor","color","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","SignUp","props","getApps","length","initializeApp","useState","email","password","displayName","account","setAccount","message","setMessage","handleChange","e","target","name","value","handleSubmit","a","auth","getAuth","createUserWithEmailAndPassword","updateProfile","currentUser","TextField","type","placeholder","label","onChange","autoComplete","variant","onClick","setStatus","SignIn","history","useHistory","signInWithEmailAndPassword","push","Box","textAlign","SignOut","signOut","theme","createMuiTheme","palette","primary","main","secondary","third","ReactDOM","render","ThemeProvider","StrictMode","path","db","getFirestore","React","open","vendors","setVendors","useEffect","setIsLoading","getDocs","query","collection","orderBy","querySnapshot","temp","forEach","doc","id","data","status","readData","selectedIndex","setSelectedIndex","VendorListComponent","List","subheader","map","vendor","index","ListItem","divider","selected","handleListItemClick","ListItemText","sx","width","height","useLocation","Name","Quantity","readCollection","link","document","getElementById","URL","href","origin","addEventListener","fetch","headers","response","contentType","get","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.efca03d6.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n      // [::1] is the IPv6 localhost address.\n      window.location.hostname === '[::1]' ||\n      // 127.0.0.0/8 are considered localhost for IPv4.\n      window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n  );\n  \n  export function register(config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n      // The URL constructor is available in all browsers that support SW.\n      const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n      if (publicUrl.origin !== window.location.origin) {\n        // Our service worker won't work if PUBLIC_URL is on a different origin\n        // from what our page is served on. This might happen if a CDN is used to\n        // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n        return;\n      }\n  \n      window.addEventListener('load', () => {\n        const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n  \n        if (isLocalhost) {\n          // This is running on localhost. Let's check if a service worker still exists or not.\n          checkValidServiceWorker(swUrl, config);\n  \n          // Add some additional logging to localhost, pointing developers to the\n          // service worker/PWA documentation.\n          navigator.serviceWorker.ready.then(() => {\n            console.log(\n              'This web app is being served cache-first by a service ' +\n                'worker. To learn more, visit https://cra.link/PWA'\n            );\n          });\n        } else {\n          // Is not localhost. Just register service worker\n          registerValidSW(swUrl, config);\n        }\n      });\n    }\n  }\n  \n  function registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n      .register(swUrl)\n      .then((registration) => {\n        registration.onupdatefound = () => {\n          const installingWorker = registration.installing;\n          if (installingWorker == null) {\n            return;\n          }\n          installingWorker.onstatechange = () => {\n            if (installingWorker.state === 'installed') {\n              if (navigator.serviceWorker.controller) {\n                // At this point, the updated precached content has been fetched,\n                // but the previous service worker will still serve the older\n                // content until all client tabs are closed.\n                console.log(\n                  'New content is available and will be used when all ' +\n                    'tabs for this page are closed. See https://cra.link/PWA.'\n                );\n  \n                // Execute callback\n                if (config && config.onUpdate) {\n                  config.onUpdate(registration);\n                }\n              } else {\n                // At this point, everything has been precached.\n                // It's the perfect time to display a\n                // \"Content is cached for offline use.\" message.\n                console.log('Content is cached for offline use.');\n  \n                // Execute callback\n                if (config && config.onSuccess) {\n                  config.onSuccess(registration);\n                }\n              }\n            }\n          };\n        };\n      })\n      .catch((error) => {\n        console.error('Error during service worker registration:', error);\n      });\n  }\n  \n  function checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n      headers: { 'Service-Worker': 'script' },\n    })\n      .then((response) => {\n        // Ensure service worker exists, and that we really are getting a JS file.\n        const contentType = response.headers.get('content-type');\n        if (\n          response.status === 404 ||\n          (contentType != null && contentType.indexOf('javascript') === -1)\n        ) {\n          // No service worker found. Probably a different app. Reload the page.\n          navigator.serviceWorker.ready.then((registration) => {\n            registration.unregister().then(() => {\n              window.location.reload();\n            });\n          });\n        } else {\n          // Service worker found. Proceed as normal.\n          registerValidSW(swUrl, config);\n        }\n      })\n      .catch(() => {\n        console.log('No internet connection found. App is running in offline mode.');\n      });\n  }\n  \n  export function unregister() {\n    if ('serviceWorker' in navigator) {\n      navigator.serviceWorker.ready\n        .then((registration) => {\n          registration.unregister();\n        })\n        .catch((error) => {\n          console.error(error.message);\n        });\n    }\n  }","import React from 'react';\n\n\n\nimport {NavLink} from 'react-router-dom';\n\nimport { AppBar, Button, Toolbar } from '@mui/material';\n\n \n\nexport default function AppMenu() {\n\n  const activeStyle = { backgroundColor:\"#f8877f\", color:\"black\" };\n\n  return (\n\n    <AppBar position=\"sticky\">\n\n      <Toolbar>\n\n        <Button component={NavLink} to='/' activeStyle={activeStyle} color=\"inherit\">vendor</Button>\n\n        {/* <Button component={NavLink} to='/employee' activeStyle={activeStyle} color=\"inherit\">employee</Button>\n        <Button component={NavLink} to='/department' activeStyle={activeStyle} color=\"inherit\">department</Button> */}\n      </Toolbar>\n\n    </AppBar>\n\n  )\n\n\n\n}","export const config = {\n  apiKey: process.env.REACT_APP_FIREBASE_API_KEY,    authDomain: \"vending-machine-e4977.firebaseapp.com\",\n  projectId: \"vending-machine-e4977\",\n  storageBucket: \"vending-machine-e4977.appspot.com\",\n  messagingSenderId: \"140374422249\",\n  appId: \"1:140374422249:web:290fa252ace77f3db53678\"\n  };","import React, {useState} from 'react';\n\nimport {Button, TextField} from '@mui/material';\n\nimport { getApps, initializeApp } from \"firebase/app\";\n\nimport { getAuth, createUserWithEmailAndPassword,updateProfile } from \"firebase/auth\";\n\nimport {config} from '../settings/firebaseConfig';\n\n\n\n//import { Box } from '@mui/system';\n\n\n\nexport default function SignUp(props) {\n\n  if (getApps().length===0) {\n\n    initializeApp(config);\n\n  }\n\n  const [account, setAccount] = useState({email:\"\",password:\"\", displayName:\"\"});\n\n  const [message, setMessage] = useState(\"\");\n\n  const handleChange = function(e){\n\n    setAccount({...account,[e.target.name]:e.target.value})\n\n  }\n\n  const handleSubmit = async function(){\n\n    try {\n\n      const auth = getAuth();\n\n      const res = await createUserWithEmailAndPassword(auth, account.email, account.password);\n\n      //console.log(res);\n\n      if (res) {\n\n        //console.log(res.user);\n\n        await updateProfile(auth.currentUser,{displayName: account.displayName});\n\n      }\n\n      setMessage(\"\");\n\n\n\n    }\n\n    catch(error){\n\n      setMessage(\"\"+error);\n\n    }\n\n  }\n\n  const changeStatus = function(){\n\n    props.setStatus(\"signIn\");\n\n  }\n\n  \n\n  return(\n\n    \n\n    <form>\n\n      <TextField type = \"text\" name = \"displayName\" value={account.displayName} \n\n        placeholder=\"姓名\" label=\"姓名:\" onChange={handleChange} /><br/>\n\n      <TextField type = \"email\" name = \"email\" value={account.email} \n\n        placeholder=\"電子郵件信箱\" label=\"電子郵件信箱:\" onChange={handleChange} autoComplete=\"email\"/><br/>\n\n      <TextField type = \"password\" name = \"password\" value={account.password}\n\n        placeholder=\"密碼\" label=\"密碼:\" onChange={handleChange} autoComplete=\"current-password\"/><br/>\n\n      {message}<br/>\n\n      <Button variant=\"contained\" color=\"primary\" onClick={handleSubmit}>註冊</Button>\n\n      <Button variant=\"contained\" color=\"secondary\" onClick={changeStatus}>已經註冊，我要登入</Button>\n\n    </form>\n\n    \n\n  )\n\n}","import React, { useState } from 'react';\nimport { Button, TextField,Box } from '@mui/material';\nimport { getApps, initializeApp } from \"firebase/app\";\nimport { getAuth, signInWithEmailAndPassword } from \"firebase/auth\";\nimport { config } from '../settings/firebaseConfig';\nimport { useHistory } from 'react-router';\n\n\n\n//import { Box } from '@mui/system';\n\n\n\nexport default function SignIn(props) {\n\n  if (getApps().length === 0) {\n\n    initializeApp(config);\n\n  }\n\n  const [account, setAccount] = useState({ email: \"\", password: \"\", displayName: \"\" });\n\n  const [message, setMessage] = useState(\"\");\n\n  const handleChange = function (e) {\n\n    setAccount({ ...account, [e.target.name]: e.target.value })\n\n  }\n\n  const history = useHistory();\n\n  const handleSubmit = async function () {\n\n    try {\n      const auth = getAuth();\n      const res = await signInWithEmailAndPassword(auth, account.email, account.password);\n      //console.log(res);\n      if (res) {\n        //console.log(auth.currentUser.displayName);\n        props.setStatus(\"signedIn\");\n        history.push(\"/VenderList\");\n      }\n      setMessage(\"\");\n\n    }\n\n    catch (error) {\n      setMessage(\"\" + error);\n    }\n\n  }\n  const changeStatus = function () {\n    props.setStatus(\"signUp\");\n  }\n\n\n  return (\n  \n    \n    <Box textAlign='center'>\n    <form>\n      <TextField type = \"email\" name = \"email\" value={account.email} \n        placeholder=\"電子郵件信箱\" label=\"電子郵件信箱:\" onChange={handleChange} autoComplete=\"email\"/><br/>\n      <TextField type = \"password\" name = \"password\" value={account.password}\n        placeholder=\"密碼\" label=\"密碼:\" onChange={handleChange} autoComplete=\"current-password\"/><br/>\n      {message}<br/>\n      <Button variant=\"contained\" color=\"primary\" onClick={handleSubmit}>登入</Button>\n      <Button variant=\"contained\" color=\"secondary\" onClick={changeStatus}>我要註冊</Button>\n    </form>\n    </Box>\n\n\n  );\n\n}","import React, {useState} from 'react';\n\nimport {Button} from '@mui/material';\n\nimport { getApps, initializeApp } from \"firebase/app\";\n\nimport { getAuth, signOut } from \"firebase/auth\";\n\nimport {config} from '../settings/firebaseConfig';\n\n\n\n//import { Box } from '@mui/system';\n\n\n\nexport default function SignOut(props) {\n\n  if (getApps().length===0) {\n\n    initializeApp(config);\n\n  }\n\n  const [message, setMessage] = useState(\"\");\n\n  const handleSubmit = async function(){\n\n    try {\n\n      const auth = getAuth();\n\n      await signOut(auth);\n\n      setMessage(\"\");\n\n      props.setStatus(\"signIn\");\n\n    }\n\n    catch(error){\n\n      setMessage(\"\"+error);\n\n    }\n\n  }\n\n  \n\n  return(\n\n    \n\n    <form>\n\n      <Button variant=\"contained\" color=\"primary\" onClick={handleSubmit}>登出</Button>\n\n      {message}<br/>\n\n    </form>\n\n    \n\n  )\n\n}","import React from 'react';\n\nimport ReactDOM from 'react-dom';\nimport {BrowserRouter as Router, Switch, Route} from 'react-router-dom';\nimport {createMuiTheme, ThemeProvider} from '@mui/material';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\n//import './index.css';\n//import App from './App';\n\nimport Main from './ui/Main.js';\nimport VendorList from './vendor/VendorList';\nimport Product from './product/Product';\nconst theme = createMuiTheme({\n\n    palette: {\n\n        primary: {\n\n            main: '#f44336'\n\n        },\n\n        secondary: {\n\n            main: '#F5B7B1'\n\n        },\n        third: {\n            main: '#f47336'\n        }\n\n    }\n\n});\n\n\nReactDOM.render (<ThemeProvider theme={theme}>\n\n\n    <React.StrictMode>\n\n        <Router>\n\n            <Switch>\n\n                <Route path=\"/vendor\"\n                    component={VendorList}/>\n\n                <Route path=\"/Product\"\n                    component={Product}/>\n\n                <Route path=\"/\"\n                    component={Main}/>\n                \n\n            </Switch>\n\n        </Router>\n\n    </React.StrictMode>\n</ThemeProvider>, document.getElementById('root'));\n\nserviceWorkerRegistration.register();\n\n","import React, {useState, useEffect} from 'react';\nimport {initializeApp} from \"firebase/app\";\nimport {useHistory } from 'react-router';\n\nimport {\n    getFirestore,\n    getDocs,\n    collection,\n    addDoc,\n    query,\n    orderBy,\n    onSnapshot,\n    doc\n} from \"firebase/firestore\";\nimport {config} from '../settings/firebaseConfig';\nimport AppMenu from '../ui/AppMenu';\n\nimport {Box, List, ListItem, ListItemText} from '@mui/material';\n\nexport default function VendorList() {\n\n    const firebaseApp = initializeApp(config);\n    const db = getFirestore();\n    // const getData = async function() {\n\n    // const querySnapshot = await getDocs(collection(db, \"V_test\"));\n\n    // querySnapshot.forEach((doc) => {\n\n    //     // doc.data() is never undefined for query doc snapshots\n\n    //     console.log(doc.id, \" => \", doc.data());\n\n\n    // });\n\n\n    // }\n\n    // getData();\n\n\n    const [open, setOpen] = React.useState(false);\n\n    const handleClickOpen = () => {\n        setOpen(true);\n    };\n    \n\n    const [vendors, setVendors] = useState([]);\n    useEffect(() => {\n\n        async function readData() {\n\n\n            setIsLoading(true);\n            // const querySnapshot = await getDocs(collection(db, \"product\"));\n            const querySnapshot = await getDocs(query(collection(db, \"Vender\"), orderBy(\"location\")));\n            const temp = [];\n\n            querySnapshot.forEach((doc) => { // doc.data() is never undefined for query doc snapshots\n\n                console.log(doc.id, \" => \", doc.data());\n\n                temp.push({id: doc.id, location: doc.data().location, status: doc.data().status});\n                \n            });\n            \n            console.log(temp);\n\n            setVendors([... temp]);\n            setIsLoading(false);\n\n        }\n\n        readData();\n\n    }, [db, open]);\n    \n    const [selectedIndex, setSelectedIndex] = useState(0);\n    let history = useHistory();\n    const handleListItemClick = (index) => {\n        \n        setSelectedIndex(index);\n        //console.log(vendors[index].id);\n        history.push(\"/Product\",{id:vendors[index].id});\n        \n    };\n    const [isLoading, setIsLoading] = useState(false);\n\n    const VendorListComponent = function () {\n        return (<List subheader=\"Vendor list\" aria-label=\"vendor list\"> {\n            vendors.map((vendor, index) => <ListItem divider\n                key={index}\n                selected={\n                    selectedIndex === index\n                }\n                onClick={\n                    () => handleListItemClick(index)\n            }>\n\n\n                <ListItemText primary={\n                        vendor.location\n                    }\n                    secondary={\n                        \"status:\" + vendor.status\n                }></ListItemText>\n\n\n            </ListItem>)\n        } </List>)\n    }\n\n\n    return (<Box sx={\n        {\n\n            width: '100vw',\n\n            height: '100vh',\n\n            backgroundColor: 'background.paper',\n\n            color: 'black',\n\n            textAlign: 'left'\n\n        }\n\n    }>\n        <AppMenu/>\n\n        <VendorListComponent/>\n\n\n    </Box>);\n\n}\n","import { useLocation } from \"react-router\";\nimport React, {useEffect} from 'react';\nimport {\n    getFirestore,\n    getDocs,\n    collection,\n    addDoc,\n    query,\n    orderBy,\n    onSnapshot,\n    doc\n} from \"firebase/firestore\";\n\nexport default function Receiver(){\n    \n    const db = getFirestore();\n    const location = useLocation();\n    useEffect(()=>{\n        async function readCollection(){\n            const Snapshot = await getDocs(collection(db, \"Vender/\"+location.state.id+\"/Item\"));\n            Snapshot.forEach((doc)=>{\n            console.log(doc.data().Name+\", \"+doc.data().Quantity);\n            });\n        }\n        readCollection();\n    },[db]);\n    return <div>\n            <p>{location.state.id}</p>\n            </div>\n    \n}","import React,{useState} from 'react';\n\nimport { useHistory } from \"react-router-dom\";\n\nimport {Link} from 'react-router-dom';\n\nimport { Box, Button } from '@mui/material';\n\nimport AppMenu from './AppMenu';\nimport ColorTabs from './ColorTabs';\nimport SignUp from '../account/SignUp';\nimport SignIn from '../account/SignIn';\nimport SignOut from '../account/SignOut';\n\n\n \n\nexport default function Main() {\n    const history = useHistory();\n\n  const handleClick = function (link) {\n\n    history.push(link);\n    \n\n  }\n  const [status, setStatus] = useState(\"signIn\");\n  \nconsole.log(status)\n  return (\n\n    <Box>\n\n    <AppMenu/>\n    \n     {status===\"signUp\"?\n\n      <SignUp setStatus={setStatus}/>\n\n      :status===\"signIn\"?\n\n      <SignIn setStatus={setStatus}/>\n      \n      \n\n      :\n\n      <SignOut setStatus={setStatus}/>\n      } \n\n\n    <Button variant=\"contained\" color=\"primary\" onClick={()=>handleClick(\"/vendor\")}>Vendor</Button>\n\n    \n    {/* <ColorTabs/> */}\n    </Box>\n    \n\n  )\n\n\n\n}"],"sourceRoot":""}